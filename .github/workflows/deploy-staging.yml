name: Deploy staging to EKS

on:
  push:
    branches: [ "staging" ]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  SERVICE_NAME: bold-rewards-svc-template
  K8S_DEPLOYMENT_NAME: staging-bold-rewards-svc-template

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps and run tests
        run: |
          npm ci --no-audit --no-fund
          npm test -- --ci

      - name: Configure AWS credentials (assume deploy role)
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/gha-deploy-backend-staging
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/${{ env.SERVICE_NAME }}:$IMAGE_TAG .
          docker push $ECR_REGISTRY/${{ env.SERVICE_NAME }}:$IMAGE_TAG

      - name: Login to EKS
        run: |
          aws eks update-kubeconfig --name bold-rewards-eks-staging --region ${{ env.AWS_REGION }}

      - name: Ensure Kubernetes resources exist (create if missing)
        run: |
          kubectl get deploy/${{ env.K8S_DEPLOYMENT_NAME }} >/dev/null 2>&1 || kubectl apply -k deploy/overlays/staging

      - name: Update deployment image and rollout
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          kubectl set image deployment/${{ env.K8S_DEPLOYMENT_NAME }} app=$ECR_REGISTRY/${{ env.SERVICE_NAME }}:$IMAGE_TAG
          kubectl rollout status deployment/${{ env.K8S_DEPLOYMENT_NAME }}
